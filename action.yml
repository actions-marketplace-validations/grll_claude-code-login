name: 'Claude Code OAuth Login'
description: 'Authenticate with Claude Code using OAuth 2.0 flow'
author: 'Guillaume Raille <guillaume.raille@gmail.com>'
branding:
  icon: 'log-in'
  color: 'orange'

inputs:
  code:
    description: 'Authorization code from Claude (leave empty for step 1)'
    required: false
    default: ''

outputs:
  success:
    description: 'Whether the OAuth login was successful'
    value: ${{ steps.oauth.outputs.success }}
  expires_at:
    description: 'Token expiration timestamp (milliseconds)'
    value: ${{ steps.oauth.outputs.expires_at }}

runs:
  using: 'composite'
  steps:
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.17

    - name: Install Dependencies
      shell: bash
      run: |
        cd ${GITHUB_ACTION_PATH}
        bun install

    - name: Cache OAuth State
      uses: actions/cache@v4
      with:
        path: ${{ github.action_path }}/claude_oauth_state.json
        key: claude-oauth-state

    - name: Run OAuth Flow
      id: oauth
      shell: bash
      run: |
        cd ${GITHUB_ACTION_PATH}
        if [ -z "${{ inputs.code }}" ]; then
          echo "🔗 Generating OAuth Login URL..."
          
          # Generate the login URL
          LOGIN_URL=$(bun run index.ts)
          
          # Create beautiful GitHub Step Summary
          cat << 'EOF' >> $GITHUB_STEP_SUMMARY
          
          ```
          ╔══════════════════════════════════════════════════════════════════════════╗
          ║                                                                          ║
          ║                        ✨ GRLL Claude Code OAuth ✨                      ║
          ║                                                                          ║
          ╚══════════════════════════════════════════════════════════════════════════╝

               ░██████╗░  ░██████╗░  ░██╗░░░░░  ░██╗░░░░░
               ██╔════╝░  ░██╔══██╗  ░██║░░░░░  ░██║░░░░░
               ██║░░██╗░  ░██████╔╝  ░██║░░░░░  ░██║░░░░░
               ██║░░╚██╗  ░██╔══██╗  ░██║░░░░░  ░██║░░░░░
               ╚██████╔╝  ░██║░░██║  ░███████╗  ░███████╗
               ░╚═════╝░  ░╚═╝░░╚═╝  ░╚══════╝  ░╚══════╝

             ─────────────────────────────────────────────────────────────────────
                             【 STEP 1: Generate Login URL 】
             ─────────────────────────────────────────────────────────────────────
          ```

          ## 🚀 OAuth URL Generated Successfully!

          ### 🌐 Your Login URL
          ```
          EOF
          echo "$LOGIN_URL" >> $GITHUB_STEP_SUMMARY
          cat << 'EOF' >> $GITHUB_STEP_SUMMARY
          ```

          ### 📋 Next Steps

          | Step | Action | Description |
          |------|--------|-------------|
          | 1️⃣ | **Click URL** | Open the login URL above in your browser |
          | 2️⃣ | **Sign In** | Authenticate with Claude and authorize the application |
          | 3️⃣ | **Copy Code** | From the callback URL: `https://console.anthropic.com/oauth/code/callback?code=YOUR_CODE` |
          | 4️⃣ | **Run Step 2** | Come back here and run the workflow again with your code |

          ### 🔄 Ready for Step 2!

          > **Next:** Go to **Actions** → **Claude Code OAuth Login** → **Run workflow**  
          > Paste your authorization code in the `code` input field and click **Run workflow**

          ---
          
          ```
          ┌─────────────────────────────────────────────────────────────────────┐
          │                    🎯 STEP 1 COMPLETE - AWAITING CODE               │
          └─────────────────────────────────────────────────────────────────────┘
          ```
          EOF
          
          echo "✅ Step 1 Complete - Login URL generated and displayed in summary"
          echo "success=pending" >> $GITHUB_OUTPUT
        else
          echo "🔐 Exchanging authorization code for tokens..."
          
          # Exchange the code for tokens and capture outputs
          if bun run index.ts "${{ inputs.code }}"; then
            # Success case
            cat << 'EOF' >> $GITHUB_STEP_SUMMARY
            
            ```
            ╔══════════════════════════════════════════════════════════════════════════╗
            ║                                                                          ║
            ║                        ✨ GRLL Claude Code OAuth ✨                      ║
            ║                                                                          ║
            ╚══════════════════════════════════════════════════════════════════════════╝

                 ░██████╗░  ░██████╗░  ░██╗░░░░░  ░██╗░░░░░
                 ██╔════╝░  ░██╔══██╗  ░██║░░░░░  ░██║░░░░░
                 ██║░░██╗░  ░██████╔╝  ░██║░░░░░  ░██║░░░░░
                 ██║░░╚██╗  ░██╔══██╗  ░██║░░░░░  ░██║░░░░░
                 ╚██████╔╝  ░██║░░██║  ░███████╗  ░███████╗
                 ░╚═════╝░  ░╚═╝░░╚═╝  ░╚══════╝  ░╚══════╝

               ─────────────────────────────────────────────────────────────────────
                               【 STEP 2: OAuth Complete! 】
               ─────────────────────────────────────────────────────────────────────
            ```

            ## 🎉 Authentication Successful!

            ### ✅ OAuth Flow Complete
            
            Your Claude Code credentials have been successfully generated and saved!

            ### 📁 Generated Files

            | File | Description | Status |
            |------|-------------|--------|
            | `credentials.json` | OAuth access & refresh tokens | ✅ Created |
            | `claude_oauth_state.json` | Temporary state file | 🗑️ Cleaned up |

            ### 🚀 What's Next?

            You can now use these credentials with Claude Code CLI or other tools that support the OAuth flow.

            ---

            ```
            ┌─────────────────────────────────────────────────────────────────────┐
            │                       🎯 AUTHENTICATION COMPLETE!                   │
            │                         Ready to use Claude Code                    │
            └─────────────────────────────────────────────────────────────────────┘
            ```
            EOF
            
            echo "✅ Step 2 Complete - OAuth authentication successful!"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            # Failure case
            cat << 'EOF' >> $GITHUB_STEP_SUMMARY
            
            ```
            ╔══════════════════════════════════════════════════════════════════════════╗
            ║                                                                          ║
            ║                        ⚠️  GRLL Claude Code OAuth ⚠️                     ║
            ║                                                                          ║
            ╚══════════════════════════════════════════════════════════════════════════╝

                 ░██████╗░  ░██████╗░  ░██╗░░░░░  ░██╗░░░░░
                 ██╔════╝░  ░██╔══██╗  ░██║░░░░░  ░██║░░░░░
                 ██║░░██╗░  ░██████╔╝  ░██║░░░░░  ░██║░░░░░
                 ██║░░╚██╗  ░██╔══██╗  ░██║░░░░░  ░██║░░░░░
                 ╚██████╔╝  ░██║░░██║  ░███████╗  ░███████╗
                 ░╚═════╝░  ░╚═╝░░╚═╝  ░╚══════╝  ░╚══════╝

               ─────────────────────────────────────────────────────────────────────
                               【 STEP 2: Authentication Failed 】
               ─────────────────────────────────────────────────────────────────────
            ```

            ## ❌ Authentication Failed

            ### 🔍 Possible Issues

            | Issue | Solution |
            |-------|----------|
            | **Expired State** | Run Step 1 again to generate a new login URL |
            | **Invalid Code** | Double-check the authorization code from the callback URL |
            | **Network Error** | Check your internet connection and try again |

            ### 🔄 Try Again

            1. Go back to **Actions** → **Claude Code OAuth Login** → **Run workflow**
            2. Leave the `code` field **empty** to restart from Step 1
            3. Follow the authentication flow again

            ---

            ```
            ┌─────────────────────────────────────────────────────────────────────┐
            │                     ⚠️  AUTHENTICATION FAILED                       │
            │                        Please try again                             │
            └─────────────────────────────────────────────────────────────────────┘
            ```
            EOF
            
            echo "❌ Step 2 Failed - Please check the summary for troubleshooting steps"
            echo "success=false" >> $GITHUB_OUTPUT
          fi
        fi
      env:
        MASK_CODE: ${{ inputs.code != '' && '***REDACTED***' || 'Not provided' }}
